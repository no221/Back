local loadGui = loadstring(game:HttpGet("https://raw.githubusercontent.com/rndmq/Serverlist/refs/heads/main/source.lua.txt"))()
local CoastingLibrary = loadGui
local MaiTab = CoastingLibrary:CreateTab("Main")
local MainSection = MaiTab:CreateSection("Main")
local toggles = {
    C = false
}

MainSection:CreateToggle("Auto Click", function(state)
    toggles.C = state

    if state then
        task.spawn(function()
            while toggles.C do
                game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Click"):FireServer()
                task.wait()
            end
        end)
    end
end)

local autoUpgradeEnabled = false
MainSection:CreateToggle("Auto Upgrade Space", function(state)
    autoUpgradeEnabled = state
    if autoUpgradeEnabled then
        
        for i = 1, 25 do
            local args = {
                [1] = i,   
                [2] = "Galaxy"  
            }
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("PurchaseGemTier"):FireServer(unpack(args))
            wait(0.1)  
        end
    end
end)


local autoRebirthEnabled = false
MainSection:CreateToggle("Auto Super Rebirth", function(state)
    autoRebirthEnabled = state
    if autoRebirthEnabled then
        
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("IncreaseRebirth"):InvokeServer()
        task.wait(0.1)  
    end
end)

local toggles = {
    G = false,
    M = false
}

MainSection:CreateToggle("Auto Claim Gift", function(state)
    toggles.G = state

    if state then
        task.spawn(function()
            while toggles.G do
                for i = 1, 12 do
                    local args = { "Reward" .. i }
                    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("CollectDailyReward"):FireServer(unpack(args))
                end
                task.wait(1) 
            end
        end)
    end
end)
MainSection:CreateToggle("Auto Mastery", function(state)
    toggles.M = state

    if state then
        task.spawn(function()
            while toggles.M do
                game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("IncreaseMastery"):InvokeServer()
                task.wait() 
            end
        end)
    end
end)
MainSection:CreateLabel("Note", "----- Eggs -----")
local toggles = {
    H = false
}

local SE = nil
local HT = "Single"

local eggNames = {}
for _, egg in ipairs(game:GetService("Workspace"):WaitForChild("Scripted"):WaitForChild("EggHolders"):GetChildren()) do
    
    if not string.find(egg.Name, "Robux") then
        table.insert(eggNames, egg.Name)
    end
end


MainSection:CreateDropdown("Select Egg", eggNames, 1, function(selected)
    SE = selected
end)

MainSection:CreateDropdown("Select Hatch Type", { "Single", "Triple" }, 1, function(selected)
    HT = selected
end)
MainSection:CreateToggle("Auto Hatch", function(state)
    toggles.H = state

    if state then
        task.spawn(function()
            while toggles.H do
                if SE and HT then
                    local args = { SE, HT }
                    game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("Hatch"):InvokeServer(unpack(args))
                end
                task.wait(0.1)
            end
        end)
    end
end)

local toggles = {
    ClickMulti = false,
    GemMulti = false,
    GemChance = false,
    RebirthButtons = false,
    WalkSpeed = false,
    PetEquip = false,
    LuckMulti = false,
    HatchSpeed = false,
    CriticalChance = false
}

local UpgradeSection = MaiTab:CreateSection("Auto Upgrade")

local function createUpgradeToggle(name)
    UpgradeSection:CreateToggle(name, function(state)
        toggles[name] = state

        if state then
            task.spawn(function()
                while toggles[name] do
                    local args = { "Spawn", name }
                    game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("PurchaseUpgrade"):InvokeServer(unpack(args))
                    task.wait()
                end
            end)
        end
    end)
end
UpgradeSection:CreateLabel("Note", "----- Upgrade -----")
for _, upgrade in ipairs({ "ClickMulti", "GemMulti", "GemChance", "RebirthButtons", "WalkSpeed", "PetEquip", "LuckMulti", "HatchSpeed", "CriticalChance" }) do
    createUpgradeToggle(upgrade)
end
UpgradeSection:CreateLabel("Note", "----- Galaxy Upgrade -----")

local galaxyCoinsMultiEnabled = false
UpgradeSection:CreateToggle("Auto Upgrade GalaxyCoinsMulti", function(state)
    galaxyCoinsMultiEnabled = state
    if galaxyCoinsMultiEnabled then
        local args = {
            [1] = "Galaxy",
            [2] = "GalaxyCoinsMulti"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("PurchaseUpgrade"):InvokeServer(unpack(args))
    end
end)


local clickMultiEnabled = false
UpgradeSection:CreateToggle("Auto Upgrade ClickMulti", function(state)
    clickMultiEnabled = state
    if clickMultiEnabled then
        local args = {
            [1] = "Galaxy",
            [2] = "ClickMulti"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("PurchaseUpgrade"):InvokeServer(unpack(args))
    end
end)


local gemMultiEnabled = false
UpgradeSection:CreateToggle("Auto Upgrade GemMulti", function(state)
    gemMultiEnabled = state
    if gemMultiEnabled then
        local args = {
            [1] = "Galaxy",
            [2] = "GemMulti"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("PurchaseUpgrade"):InvokeServer(unpack(args))
    end
end)


local moreStorageEnabled = false
UpgradeSection:CreateToggle("Auto Upgrade MoreStorage", function(state)
    moreStorageEnabled = state
    if moreStorageEnabled then
        local args = {
            [1] = "Galaxy",
            [2] = "MoreStorage"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("PurchaseUpgrade"):InvokeServer(unpack(args))
    end
end)


local petEquipEnabled = false
UpgradeSection:CreateToggle("Auto Upgrade PetEquip", function(state)
    petEquipEnabled = state
    if petEquipEnabled then
        local args = {
            [1] = "Galaxy",
            [2] = "PetEquip"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("PurchaseUpgrade"):InvokeServer(unpack(args))
    end
end)


local luckMultiEnabled = false
UpgradeSection:CreateToggle("Auto Upgrade LuckMulti", function(state)
    luckMultiEnabled = state
    if luckMultiEnabled then
        local args = {
            [1] = "Galaxy",
            [2] = "LuckMulti"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("PurchaseUpgrade"):InvokeServer(unpack(args))
    end
end)


local goldenMultiEnabled = false
UpgradeSection:CreateToggle("Auto Upgrade GoldenMulti", function(state)
    goldenMultiEnabled = state
    if goldenMultiEnabled then
        local args = {
            [1] = "Galaxy",
            [2] = "GoldenMulti"
        }
        game:GetService("ReplicatedStorage"):WaitForChild("Functions"):WaitForChild("PurchaseUpgrade"):InvokeServer(unpack(args))
    end
end)

local MainTab = CoastingLibrary:CreateTab("Free GP")


local GiftSection = MainTab:CreateSection("Gift Gamepass")




local PlayersService = game:GetService("Players")


local function GetPlayerNames()
    local names = {}
    for _, player in ipairs(PlayersService:GetPlayers()) do
        table.insert(names, player.Name)
    end
    return names
end


local selectedPlayerName = PlayersService.LocalPlayer.Name


local playersDropdown = GiftSection:CreateDropdown("Select Player", GetPlayerNames(), 1, function(option)
    selectedPlayerName = option
end)


GiftSection:CreateButton("Refresh Player List", function()
    local newOptions = GetPlayerNames()
    playersDropdown.Refresh(newOptions, 1, function(option)
        selectedPlayerName = option
    end)
end)

local giftOptions = {
    "x8Hatch",
    "VIP",
    "x15Hatch",
    "MagicEgg",
    "2Equip",
    "5Equip",
    "x2Clicks",
    "x2Rebirths",
    "x2Gems",
    "ArcaneLuck",
    "Lucky",
    "SuperLucky",
    "50Storage",
    "125Storage",
    "GiantChance",
    "250Storage",
    "x2XP",
    "AutoRebirth",
    "FastHatch",
    "X5Hatch"
}

local selectedGift = giftOptions[1]  
local giftDropdown = GiftSection:CreateDropdown("Select Gift", giftOptions, 1, function(option)
    selectedGift = option
end)







GiftSection:CreateButton("Give to Everyone", function()
    
    local players = game:GetService("Players"):GetPlayers()

    for _, player in ipairs(players) do
        
        local args = {
            [1] = player,
            [2] = selectedGift,
            [3] = false,
            [4] = "Congratulations"
        }

        
        game:GetService("ReplicatedStorage")
            :WaitForChild("Functions")
            :WaitForChild("GiftGamepass")
            :InvokeServer(unpack(args))

        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Successfully gifted",
            Text = "Gifted: " .. selectedGift .. " to: " .. player.Name
        })

        
        wait(0.1)  
    end
end)




GiftSection:CreateButton("Give to Player (Selected)", function()
    local player = game:GetService("Players"):FindFirstChild(selectedPlayerName)
    if player then
        
        local args = {
            [1] = player,
            [2] = selectedGift,
            [3] = false,
            [4] = "Congratulations"
        }

        
        game:GetService("ReplicatedStorage")
            :WaitForChild("Functions")
            :WaitForChild("GiftGamepass")
            :InvokeServer(unpack(args))

        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Successfully gifted",
            Text = "Gifted: " .. selectedGift .. " to: " .. player.Name
        })
    else
        warn("Not found" .. selectedPlayerName)
    end
end)





local FreeItemsSection = MainTab:CreateSection("Free Gamepass")

local MarketplaceService = game:GetService("MarketplaceService")
local localPlayer = PlayersService.LocalPlayer
FreeItemsSection:CreateLabel("Note", "You need token for this.")
FreeItemsSection:CreateButton("Buy all Gamepass", function()
local args = {
    [1] = 952992360,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 2420742888,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952794462,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 1004357550,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 1060188633,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 1003757788,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952880450,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952498940,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952528777,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952990295,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952910394,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952742508,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952748532,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952638657,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952554759,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952692591,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952804573,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952688540,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952848396,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952403968,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952439698,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))
task.wait()
local args = {
    [1] = 952580737,
    [2] = true
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("TokenPurchase"):FireServer(unpack(args))

end)

local function createFreeItemToggle(name, productId)
    local toggleState = false
    FreeItemsSection:CreateToggle(name, function(state)
        toggleState = state
        if toggleState then
            spawn(function()
                while toggleState do
                    MarketplaceService:SignalPromptProductPurchaseFinished(localPlayer.UserId, productId, true)
                    wait(0.1)
                end
            end)
        end
    end)
end



FreeItemsSection:CreateButton("Buy Season Pass", function()
    game:GetService("MarketplaceService"):SignalPromptProductPurchaseFinished(game:GetService("Players").LocalPlayer.UserId, 2420742896, true)
end)


createFreeItemToggle("Free Token", 2420742888)
FreeItemsSection:CreateLabel("Note", "----- Boost -----")
createFreeItemToggle("Free Tap Boost", 2420742879)
createFreeItemToggle("Free x2 Rebirth Boost", 2420755358    )
createFreeItemToggle("Free x2 Gems Boost", 2420755365)
createFreeItemToggle("Free x2 Galaxy Boost", 24202755353)
createFreeItemToggle("Free x2 Luck Boost", 2420755359)
FreeItemsSection:CreateLabel("Note", "----- Free Eggs -----")
createFreeItemToggle("Free Corrupted Egg", 2420742882)
createFreeItemToggle("Free Robux Spawn Egg", 2420742884)
createFreeItemToggle("Free Cyber Robux Egg", 2420755350)
createFreeItemToggle("Free Galaxy Egg", 1654131151)
createFreeItemToggle("Free Hero Egg", 1638965347)
createFreeItemToggle("Free Prismatic", 1668085051)
createFreeItemToggle("Free Elemental", 1695485738)
createFreeItemToggle("Free Cosmic Robux Egg", 1614696745)
createFreeItemToggle("Free Lunar Egg", 3220643828)
createFreeItemToggle("Free PumpkinRobux", 1673897697)
createFreeItemToggle("Free Christmas Robux", 2674899216)
createFreeItemToggle("Free Valentines Robux", 2891840450)

local MiscTab = CoastingLibrary:CreateTab("Misc")
local MiscSection = MiscTab:CreateSection("Misc")
MiscSection:CreateToggle("Anti-AFK", function(state)
    if state then
        print("Afk: Turned on!")
        local VirtualUser = game:GetService("VirtualUser")
        game.Players.LocalPlayer.Idled:Connect(function()
            VirtualUser:CaptureController()
            VirtualUser:ClickButton2(Vector2.new())
            print("AFK: Active!")
        end)
    else
        print("Afk: off")
    end
end)

MiscSection:CreateToggle("White Screen", function(state)
    if state then
        local whiteScreen = Instance.new("ScreenGui")
        whiteScreen.Name = "WhiteScreen"
        whiteScreen.IgnoreGuiInset = true
        whiteScreen.Parent = game.CoreGui

        local frame = Instance.new("Frame", whiteScreen)
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.Position = UDim2.new(0, 0, 0, 0)
        frame.BackgroundColor3 = Color3.new(1, 1, 1)
        frame.BorderSizePixel = 0

        frame.ZIndex = 0
    else
        if game.CoreGui:FindFirstChild("WhiteScreen") then
            game.CoreGui.WhiteScreen:Destroy()
        end
    end
end)
MiscSection:CreateButton("FPS Booster", function()
    local Notification = Instance.new("BindableFunction")

    function Notification.OnInvoke(response)
        if response == "Yes" then
            local Lighting = game:GetService("Lighting")
            local Players = game:GetService("Players")

            for _, v in ipairs(Lighting:GetChildren()) do
                if v:IsA("PostEffect") then
                    v:Destroy()
                end
            end

            Lighting.GlobalShadows = false
            Lighting.FogEnd = 9e9
            Lighting.Brightness = 2

            local function handleInstance(instance)
                if instance:IsA("BasePart") then
                    local player = Players.LocalPlayer
                    if player and player.Character and instance:IsDescendantOf(player.Character) then
                        return
                    end
                    instance.Material = Enum.Material.SmoothPlastic
                    instance.Reflectance = 0
                end
                if instance:IsA("Texture") or instance:IsA("Decal") then
                    local player = Players.LocalPlayer
                    if player and player.Character and instance:IsDescendantOf(player.Character) then
                        return
                    end
                    instance.Transparency = 1
                end
            end

            for _, instance in ipairs(workspace:GetDescendants()) do
                handleInstance(instance)
            end

            local terrain = workspace:FindFirstChild("Terrain")
            if terrain then
                terrain.WaterWaveSize = 0
                terrain.WaterWaveSpeed = 0
                terrain.WaterReflectance = 0
                terrain.WaterTransparency = 1
            end

            settings().Physics.AllowSleep = true
            settings().Rendering.QualityLevel = 1
            settings().Rendering.EagerBulkExecution = false
            settings().Rendering.TextureQuality = Enum.TextureQuality.Low

            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Success",
                Text = "FPS Booster applied successfully!",
                Duration = 2
            })
        end
    end

    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Confirmation",
        Text = "Do you want to apply FPS Booster?",
        Duration = 5,
        Callback = Notification,
        Button1 = "Yes",
        Button2 = "No"
    })
end)
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "CustomNotification"
ScreenGui.Parent = game.CoreGui
local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 300, 0, 50)
Frame.Position = UDim2.new(1, -320, 1, -100)
Frame.AnchorPoint = Vector2.new(1, 1)
Frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Frame.BackgroundTransparency = 0.2
Frame.Parent = ScreenGui
local TextLabel = Instance.new("TextLabel")
TextLabel.Size = UDim2.new(1, -50, 1, 0)
TextLabel.Position = UDim2.new(0, 50, 0, 0)
TextLabel.Font = Enum.Font.SourceSansBold
TextLabel.Text = "Thank you for using my script!\nif you don't mind give me a like on the website"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 16
TextLabel.TextXAlignment = Enum.TextXAlignment.Left
TextLabel.TextYAlignment = Enum.TextYAlignment.Center
TextLabel.BackgroundTransparency = 1
TextLabel.Parent = Frame
local ImageLabel = Instance.new("ImageLabel")
ImageLabel.Size = UDim2.new(0, 40, 0, 40)
ImageLabel.Position = UDim2.new(0, 5, 0.5, -20)
ImageLabel.Image = "rbxassetid://316605349"
ImageLabel.BackgroundTransparency = 1
ImageLabel.Parent = Frame
Frame.Position = UDim2.new(1, 0, 1, -100)
Frame:TweenPosition(UDim2.new(1, -320, 1, -100), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.5, true)

wait(6)

Frame:TweenPosition(UDim2.new(1, 0, 1, -100), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 0.5, true)
wait(0.5)
ScreenGui:Destroy()

game:GetService("StarterGui"):SetCore("SendNotification",{
	Title = "Thank You For using my\nscript",
	Text = "Made By: Rndm"
})